
syntax = "proto3";
// 通用Header
message DKHeader {
    // 设备序列号
     string sn= 1;
    // 用户Id
     string user_id= 2;
    // 用户设备Id
     string device_id= 3;
    // 发送消息时时间戳
    int64 timestamp= 4;
}
 
// 事件状态模型
message DKCounterItem {
    // uri
    int32 uri= 1;
    // 状态值
    int32 value= 2;
    // 事件发生时时间戳
    int64 timestamp                             = 3;
}
                         
// uri = 3001
message DKCounter {
    DKHeader header= 1;
    int32 uri                                   = 2;
    repeated DKCounterItem items                = 3;
}
                         
// uri = 3002
message BleScanStart {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
}
                         
// uri = 3003
message BleFindTarget {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    int32 result                                = 3;
}
                         
// uri = 3004
message BleConnectStart {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
}
                         
// uri = 3005
message BleConnectFinish {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    int32 result                                = 3;
}
                         
// uri = 3006
message MQTTConnectStart {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
}
                         
// uri = 3007
message VehicleStatusBle {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    bytes result                                = 3;
}
                         
// uri = 3008
message VehicleStatusRsp {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    bytes result                                = 3;
}
                         
// uri = 3009
message VehicleCommandBle {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
     string command                              = 3;
}
                         
// uri = 3010
message VehicleCommandRsp {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
     string command                              = 3;
}
                         
// uri = 3011
message BleDisconnected {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    int32 result                                = 3;
}
                         
// uri = 3012
message MQTTDisconnected {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    int32 result                                = 3;
}
                         
// uri = 3013
message LocationData {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    double latitude                             = 3;
    double longtitude                           = 4;
    int64 locate_timestamp                      = 5;
}
                         
// uri = 3014
message NetworkReachability {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
    int32 result                                = 3;
}
                         
// uri = 3015
message VINBle {
    DKHeader header                             = 1;
    int32 uri                                   = 2;
     string result                               = 3;
}
 
// 事件上报模型
message ReportItem {
    int32 uri                                   = 1;
    DKCounter counter                           = 2;
    BleScanStart ble_scan_start                 = 3;
    BleFindTarget ble_find_target               = 4;
    BleConnectStart ble_connect_start           = 5;
    BleConnectFinish ble_connect_finish         = 6;
    MQTTConnectStart mqtt_connect_start         = 7;
    VehicleStatusBle vehicle_status_ble         = 8;
    VehicleStatusRsp vehicle_status_rsp         = 9;
    VehicleCommandBle vehicle_command_ble       = 10;
    VehicleCommandRsp vehicle_command_rsp       = 11;
    BleDisconnected ble_disconnected            = 12;
    MQTTDisconnected mqtt_disconnected          = 13;
    LocationData location_data                  = 14;
    NetworkReachability network_reachability    = 15;
    VINBle vin_ble                              = 16;
}